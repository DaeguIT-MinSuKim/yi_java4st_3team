SELECT * FROM MEMBER;

SELECT MEMBER_NO , MEMBER_NAME , TEL , TOTAL_RENT FROM MEMBER;

INSERT INTO MEMBER values('M005', '박박박', '010-1111-1111', 0);

DELETE FROM MEMBER WHERE MEMBER_NO = 'M123';

UPDATE MEMBER SET MEMBER_NAME = '자자자', TEL = '010-5555-5555', TOTAL_RENT = 0 WHERE MEMBER_NO = 'M010';

/* 08월 20일 대현 끄적임 */
SELECT * FROM ALL_TABLES;

SELECT * FROM BOOK;
SELECT * FROM MEMBER;
SELECT * FROM RENT;
/*
ALTER TABLE BOOK MODIFY BOOK_NAME VARCHAR2(50);
ALTER TABLE BOOK MODIFY AUTHOR VARCHAR2(50);
ALTER TABLE BOOK MODIFY PUBLISHER VARCHAR2(50);
*/
INSERT INTO RENT VALUES('M004', '김바자', '010-4123-4123', 0);

/* Book 리스트 추가 */
SELECT BOOK_NO, BOOK_NAME, AUTHOR, PUBLISHER, PRICE, IS_RENT, TOTAL_COUNT FROM BOOK;

SELECT BOOK_NO, BOOK_NAME, RENT_DATE , RETURN_DATE, IS_DELAY FROM MEMBER M, BOOK B, RENT R WHERE MEMBER_NO=M001;
/* Book 저장 버튼 기능 */
INSERT INTO BOOK VALUES('B010', '책이름', '저자', '출판사', 25000, 1, 0);

SELECT * FROM BOOK;

/* Book 삭제 버튼 기능 */
DELETE FROM BOOK WHERE BOOK_NO = 'B010';

/* Book 수정 버튼 기능 */
UPDATE BOOK SET BOOK_NAME = '책이름', AUTHOR = '저자', PUBLISHER = '출판사', PRICE = 20000, IS_RENT = 1, TOTAL_COUNT = 0 WHERE BOOK_NO = 'B010';

SELECT * FROM RENT;

/* rent 멤버 삭제 */
DELETE FROM RENT WHERE MEMBER_NO = 'M001';

/* 총 도서 권수 */
SELECT COUNT(DISTINCT BOOK_NO) FROM BOOK;

/* 총 대여 도서 권수*/
SELECT COUNT(DISTINCT BOOK_NO) FROM RENT;

/* 총 연체 도서 권수 */
SELECT R.RENT_DATE, R.RETURN_DATE, (CASE WHEN R.RENT_DATE+3 < R.RETURN_DATE THEN 'Y'
										 WHEN R.RENT_DATE+3 >= R.RETURN_DATE THEN 'N'
										 ELSE '반납하지 않음' END) AS IS_DELAY
  FROM MEMBER M, BOOK B, RENT R
 WHERE M.MEMBER_NO = R.MEMBER_NO AND B.BOOK_NO = R.BOOK_NO;
 
CREATE VIEW VM_OVERDUE
    AS (SELECT R.RENT_DATE, R.RETURN_DATE, (CASE WHEN R.RENT_DATE+3 < R.RETURN_DATE THEN 'Y'
										 WHEN R.RENT_DATE+3 >= R.RETURN_DATE THEN 'N'
										 ELSE '반납하지 않음' END) AS IS_DELAY
  FROM MEMBER M, BOOK B, RENT R
 WHERE M.MEMBER_NO = R.MEMBER_NO AND B.BOOK_NO = R.BOOK_NO);
 
SELECT COUNT(IS_DELAY) FROM VM_OVERDUE WHERE IS_DELAY = 'Y';
